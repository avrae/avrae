name: Deploy Nightly

on:
  push:
    branches:
      - nightly
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  
jobs:
  # ===== ecs deploy =====
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: avrae
      IMAGE_NAME: avrae-bot
      SERVICE_NAME: avrae-bot-nightly
      TAG_ENV: nightly
      CLUSTER_ENV: live
      REGION: us-east-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AVRAE_GITHUB_OIDC_ROLE_ARN }}
          role-session-name: "avrae-avrae-deploy-nightly"
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: avrae/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $SERVICE_NAME --build-arg COMMIT=$GITHUB_SHA .
          docker tag $SERVICE_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $SERVICE_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_ENV
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Deploy Amazon ECS task definition
        run: |
          aws ecs update-service --cluster $CLUSTER_NAME-$CLUSTER_ENV --service $SERVICE_NAME --force-new-deployment --region $REGION --task-definition avrae-bot-nightly-ecs-task-definition


