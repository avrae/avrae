name: Rollback Live Avrae to prior version

on:
    workflow_dispatch:
        inputs:
            revision:
                description: 'Task definition revision number (leave blank to use previous one)'
                required: false

env:
    CLUSTER_NAME: avrae-live
    SERVICE_NAME: avrae-bot
    REGION: us-east-1

jobs:
    rollback:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AVRAE_GITHUB_OIDC_ROLE_ARN }}
                  role-session-name: "avrae-avrae-deploy-live"
                  aws-region: ${{ env.REGION }}

            - id: get-taskdef
              name: Get current task definition
              run: |
                TASK_DEF=$(aws ecs describe-services \
                --cluster "$CLUSTER_NAME" \
                --services "$SERVICE_NAME" \
                --query "services[0].taskDefinition" \
                --output text)
                echo "taskdef=$TASK_DEF" >> $GITHUB_OUTPUT

            - id: rollback-taskdef
              name: Derive rollback revision
              run: |
                BASE=$(echo "${{ steps.get-taskdef.outputs.taskdef }}" | cut -d: -f1-2)
                if [ -n "${{ github.event.inputs.revision }}" ]; then
                  ROLLBACK="$BASE:${{ github.event.inputs.revision }}"
                else
                  CURR_REV=$(echo "${{ steps.get-taskdef.outputs.taskdef }}" | cut -d: -f3)
                  PREV_REV=$((CURR_REV-1))
                  ROLLBACK="$BASE:$PREV_REV"
                fi
                echo "rollback=$ROLLBACK" >> $GITHUB_OUTPUT

            - name: Update ECS Service to rollback revision
              run: |
                aws ecs update-service \
                --cluster "$CLUSTER_NAME" \
                --service "$SERVICE_NAME" \
                --task-definition "${{ steps.rollback-taskdef.outputs.rollback }}"
